name: CI/CD Pipeline

on:
  push:
    branches: 
      - main

env:
      BACKEND_IMAGE: bouthainabakouch/backend-api-k8s
      FRONTEND_IMAGE: bouthainabakouch/frontend-app-k8s
      BUILD_NUMBER: ${{ github.run_number }}

jobs:

  test-backend:
    runs-on: ubuntu-latest  
    defaults:
      run:
        working-directory: backend_api
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: install dependencies
        run: npm i
      - name: Unit Test 
        run: npm test

  test-frontend:
    runs-on: ubuntu-latest  
    defaults:
      run:
        working-directory: frontend-app
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: install dependencies
        run: npm install
      - name: run unit tests
        run: npm run test
      - name: Code-quality-test
        run: npm run lint


  build-and-push:

    runs-on: ubuntu-latest
    needs:  [test-backend, test-frontend]
    steps:
      
      - name: checkout
        uses: actions/checkout@v4

      - name: Build backend image
        run: docker build -t ${{ env.BACKEND_IMAGE }}:${{ env.BUILD_NUMBER }} ./backend_api

      - name: Build frontend image
        run: docker build -t ${{ env.FRONTEND_IMAGE }}:${{ env.BUILD_NUMBER }} --build-arg VITE_API_URL=http://api.mern.local.com:31145 ./frontend-app

      - name: login to dockerhub
        uses: docker/login-action@v3
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and push backend image
        run: |
          docker tag ${{ env.BACKEND_IMAGE }}:${{ env.BUILD_NUMBER }} ${{ env.BACKEND_IMAGE }}:latest
          docker push ${{ env.BACKEND_IMAGE }}:${{ env.BUILD_NUMBER }}
          docker push ${{ env.BACKEND_IMAGE }}:latest

      - name: Tag and push frontend image
        run: |
          docker tag ${{ env.FRONTEND_IMAGE }}:${{ env.BUILD_NUMBER }} ${{ env.FRONTEND_IMAGE }}:latest
          docker push ${{ env.FRONTEND_IMAGE }}:${{ env.BUILD_NUMBER }}
          docker push ${{ env.FRONTEND_IMAGE }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy to Local Kubernetes via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.K8S_HOST }}
          username: ${{ secrets.K8S_USER }}
          key: ${{ secrets.K8S_SSH_KEY }}
          script: |
            cd ~/mern-project/k8s-manifests
          
            # Update images to the freshly pushed tags if needed
            sed -i "s|image: bouthainabakouch/backend-api-k8s:.*|image: bouthainabakouch/backend-api-k8s:${{ env.BUILD_NUMBER }}|g" ~/mern-project/k8s-manifests/backend/backend.yaml
            sed -i "s|image: bouthainabakouch/frontend-app-k8s:.*|image: bouthainabakouch/frontend-app-k8s:${{ env.BUILD_NUMBER }}|g" ~/mern-project/k8s-manifests/frontend/frontend.yaml

            # Apply the manifests to the cluster
            kubectl apply -f ~/mern-project/k8s-manifests/namespace.yaml
            kubectl apply -f ~/mern-project/k8s-manifests/mongodb/
            kubectl apply -f ~/mern-project/k8s-manifests/backend/
            kubectl apply -f ~/mern-project/k8s-manifests/frontend/
            kubectl apply -f ~/mern-project/k8s-manifests/ingress.yaml

            # Verify the deployments
            kubectl rollout status deployment/backend -n mern-app 
            kubectl rollout status deployment/frontend -n mern-app
            kubectl get all -n mern-app
            kubectl get ingress -n mern-app
            